syntax = "proto3";

package music;

option go_package = "music";
option java_multiple_files = true;
option java_package = "music";
option java_outer_classname = "MusicProto";

// Track service
service TrackService {
  // Get all tracks with pagination and filtering
  rpc GetTracks(GetTracksRequest) returns (GetTracksResponse);
  
  // Get a single track by slug
  rpc GetTrack(GetTrackRequest) returns (GetTrackResponse);
  
  // Create a new track
  rpc CreateTrack(CreateTrackRequest) returns (CreateTrackResponse);
  
  // Update an existing track
  rpc UpdateTrack(UpdateTrackRequest) returns (UpdateTrackResponse);
  
  // Delete a track
  rpc DeleteTrack(DeleteTrackRequest) returns (DeleteTrackResponse);
  
  // Delete multiple tracks
  rpc DeleteTracks(DeleteTracksRequest) returns (DeleteTracksResponse);
  
  // Upload audio file for a track
  rpc UploadTrackFile(stream UploadTrackFileRequest) returns (UploadTrackFileResponse);
  
  // Delete audio file from a track
  rpc DeleteTrackFile(DeleteTrackFileRequest) returns (DeleteTrackFileResponse);
}

// Genre service
service GenreService {
  // Get all genres
  rpc GetGenres(GetGenresRequest) returns (GetGenresResponse);
}

// Real-time service for active track streaming
service RealTimeService {
  // Stream active track updates
  rpc StreamActiveTrack(StreamActiveTrackRequest) returns (stream ActiveTrackUpdate);
}

// Track messages
message Track {
  string id = 1;
  string title = 2;
  string artist = 3;
  string album = 4;
  repeated string genres = 5;
  string slug = 6;
  string cover_image = 7;
  string audio_file = 8;
  string created_at = 9;
  string updated_at = 10;
}

// GetTracks
message GetTracksRequest {
  int32 page = 1;
  int32 limit = 2;
  string sort = 3;
  string order = 4;
  string search = 5;
  string genre = 6;
  string artist = 7;
}

message GetTracksResponse {
  repeated Track data = 1;
  PaginationMeta meta = 2;
}

message PaginationMeta {
  int32 total = 1;
  int32 page = 2;
  int32 limit = 3;
  int32 total_pages = 4;
}

// GetTrack
message GetTrackRequest {
  string slug = 1;
}

message GetTrackResponse {
  Track track = 1;
}

// CreateTrack
message CreateTrackRequest {
  string title = 1;
  string artist = 2;
  string album = 3;
  repeated string genres = 4;
  string cover_image = 5;
}

message CreateTrackResponse {
  Track track = 1;
}

// UpdateTrack
message UpdateTrackRequest {
  string id = 1;
  string title = 2;
  string artist = 3;
  string album = 4;
  repeated string genres = 5;
  string cover_image = 6;
}

message UpdateTrackResponse {
  Track track = 1;
}

// DeleteTrack
message DeleteTrackRequest {
  string id = 1;
}

message DeleteTrackResponse {
  bool success = 1;
}

// DeleteTracks
message DeleteTracksRequest {
  repeated string ids = 1;
}

message DeleteTracksResponse {
  repeated string success = 1;
  repeated string failed = 2;
}

// UploadTrackFile
message UploadTrackFileRequest {
  oneof data {
    FileInfo file_info = 1;
    bytes chunk = 2;
  }
}

message FileInfo {
  string track_id = 1;
  string filename = 2;
  string content_type = 3;
}

message UploadTrackFileResponse {
  Track track = 1;
}

// DeleteTrackFile
message DeleteTrackFileRequest {
  string track_id = 1;
}

message DeleteTrackFileResponse {
  Track track = 1;
}

// GetGenres
message GetGenresRequest {}

message GetGenresResponse {
  repeated string genres = 1;
}

// Real-time active track streaming
message StreamActiveTrackRequest {}

message ActiveTrackUpdate {
  string track_title = 1;
  string artist = 2;
  string timestamp = 3;
}

// Error messages
message Error {
  string message = 1;
  string code = 2;
  map<string, string> details = 3;
} 